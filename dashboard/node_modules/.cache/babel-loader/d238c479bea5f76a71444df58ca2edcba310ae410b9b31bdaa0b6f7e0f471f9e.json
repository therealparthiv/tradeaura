{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parth\\\\Dropbox\\\\My PC (LAPTOP-01SET6EP)\\\\Desktop\\\\TradeAura\\\\dashboard\\\\src\\\\components\\\\Positions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"../utils/axiosInstance\";\nimport { VerticalGraph } from \"./VerticalGraph\";\nimport \"./\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Positions = () => {\n  _s();\n  const [positions, setPositions] = useState([]);\n  const [livePrices, setLivePrices] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPositions = async () => {\n      try {\n        const res = await axios.get(\"/api/positions\");\n        setPositions(res.data);\n        const prices = {};\n        for (let pos of res.data) {\n          const originalName = pos.name;\n          let symbol = originalName;\n          if (!symbol.endsWith(\".NS\") && !symbol.endsWith(\".BO\")) {\n            symbol += \".NS\"; // default to NSE\n          }\n          try {\n            const priceRes = await axios.get(`/api/price/${symbol}`);\n            const fetchedPrice = parseFloat(priceRes.data.price);\n            prices[originalName] = isNaN(fetchedPrice) ? 0 : fetchedPrice;\n          } catch (err) {\n            console.warn(`Price fetch failed for ${symbol}`);\n            prices[originalName] = 0;\n          }\n        }\n        setLivePrices(prices);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error loading positions\", err);\n        setLoading(false);\n      }\n    };\n    fetchPositions();\n  }, []);\n  const getLTP = symbol => {\n    const price = livePrices[symbol];\n    return typeof price === \"number\" ? price : 0;\n  };\n  const getExchange = name => {\n    if (name.endsWith(\".BO\")) return \"BSE\";\n    return \"NSE\";\n  };\n  const stripExtension = name => name.replace(/\\.NS|\\.BO/, \"\");\n  const labels = positions.map(s => s.name);\n  const data = {\n    labels,\n    datasets: [{\n      label: \"LTP\",\n      data: positions.map(s => getLTP(s.name)),\n      backgroundColor: \"rgba(53, 162, 235, 0.5)\"\n    }]\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"loading\",\n    children: \"Loading positions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"title\",\n      children: [\"Open Positions (\", positions.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Instrument\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Side\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Qty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Avg. cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"LTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cur. val\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"P&L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: positions.map((pos, index) => {\n            const ltp = getLTP(pos.name);\n            const curValue = ltp * pos.qty;\n            const invested = pos.avg * pos.qty;\n            const pnl = curValue - invested;\n            const isProfit = pnl >= 0;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stock-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"symbol\",\n                    children: stripExtension(pos.name)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"exchange-tag\",\n                    children: getExchange(pos.name)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: pos.side.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: pos.qty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"\\u20B9\", pos.avg.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"\\u20B9\", ltp.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"\\u20B9\", curValue.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: isProfit ? \"profit\" : \"loss\",\n                children: pnl < 0 ? `-₹${Math.abs(pnl).toFixed(2)}` : `₹${pnl.toFixed(2)}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VerticalGraph, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Positions, \"C+dTnz3TN5Pv3W3av5lmkEr5u8k=\");\n_c = Positions;\nexport default Positions;\nvar _c;\n$RefreshReg$(_c, \"Positions\");","map":{"version":3,"names":["React","useEffect","useState","axios","VerticalGraph","jsxDEV","_jsxDEV","Fragment","_Fragment","Positions","_s","positions","setPositions","livePrices","setLivePrices","loading","setLoading","fetchPositions","res","get","data","prices","pos","originalName","name","symbol","endsWith","priceRes","fetchedPrice","parseFloat","price","isNaN","err","console","warn","error","getLTP","getExchange","stripExtension","replace","labels","map","s","datasets","label","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","ltp","curValue","qty","invested","avg","pnl","isProfit","side","toUpperCase","toFixed","Math","abs","_c","$RefreshReg$"],"sources":["C:/Users/parth/Dropbox/My PC (LAPTOP-01SET6EP)/Desktop/TradeAura/dashboard/src/components/Positions.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../utils/axiosInstance\";\r\nimport { VerticalGraph } from \"./VerticalGraph\";\r\nimport \"./\";\r\nconst Positions = () => {\r\n  const [positions, setPositions] = useState([]);\r\n  const [livePrices, setLivePrices] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPositions = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/positions\");\r\n        setPositions(res.data);\r\n\r\n        const prices = {};\r\n        for (let pos of res.data) {\r\n          const originalName = pos.name;\r\n          let symbol = originalName;\r\n\r\n          if (!symbol.endsWith(\".NS\") && !symbol.endsWith(\".BO\")) {\r\n            symbol += \".NS\"; // default to NSE\r\n          }\r\n\r\n          try {\r\n            const priceRes = await axios.get(`/api/price/${symbol}`);\r\n            const fetchedPrice = parseFloat(priceRes.data.price);\r\n            prices[originalName] = isNaN(fetchedPrice) ? 0 : fetchedPrice;\r\n          } catch (err) {\r\n            console.warn(`Price fetch failed for ${symbol}`);\r\n            prices[originalName] = 0;\r\n          }\r\n        }\r\n\r\n        setLivePrices(prices);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"Error loading positions\", err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPositions();\r\n  }, []);\r\n\r\n  const getLTP = (symbol) => {\r\n    const price = livePrices[symbol];\r\n    return typeof price === \"number\" ? price : 0;\r\n  };\r\n\r\n  const getExchange = (name) => {\r\n    if (name.endsWith(\".BO\")) return \"BSE\";\r\n    return \"NSE\";\r\n  };\r\n\r\n  const stripExtension = (name) => name.replace(/\\.NS|\\.BO/, \"\");\r\n\r\n  const labels = positions.map((s) => s.name);\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"LTP\",\r\n        data: positions.map((s) => getLTP(s.name)),\r\n        backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (loading) return <p className=\"loading\">Loading positions...</p>;\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"title\">Open Positions ({positions.length})</h3>\r\n\r\n      <div className=\"order-table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Instrument</th>\r\n              <th>Side</th>\r\n              <th>Qty</th>\r\n              <th>Avg. cost</th>\r\n              <th>LTP</th>\r\n              <th>Cur. val</th>\r\n              <th>P&L</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {positions.map((pos, index) => {\r\n              const ltp = getLTP(pos.name);\r\n              const curValue = ltp * pos.qty;\r\n              const invested = pos.avg * pos.qty;\r\n              const pnl = curValue - invested;\r\n              const isProfit = pnl >= 0;\r\n\r\n              return (\r\n                <tr key={index}>\r\n                  <td>\r\n                    <div className=\"stock-info\">\r\n                      <span className=\"symbol\">{stripExtension(pos.name)}</span>\r\n                      <span className=\"exchange-tag\">\r\n                        {getExchange(pos.name)}\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                  <td>{pos.side.toUpperCase()}</td>\r\n                  <td>{pos.qty}</td>\r\n                  <td>₹{pos.avg.toFixed(2)}</td>\r\n                  <td>₹{ltp.toFixed(2)}</td>\r\n                  <td>₹{curValue.toFixed(2)}</td>\r\n                  <td className={isProfit ? \"profit\" : \"loss\"}>\r\n                    {pnl < 0\r\n                      ? `-₹${Math.abs(pnl).toFixed(2)}`\r\n                      : `₹${pnl.toFixed(2)}`}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <VerticalGraph data={data} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Positions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}